<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lanmei.commodity.dao.mapper.CommodityClassificationMapper">
  <resultMap id="BaseResultMap" type="org.lanmei.commodity.dao.model.CommodityClassification">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="isParent" jdbcType="VARCHAR" property="isparent" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from commodity_classification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanmei.commodity.dao.model.CommodityClassification">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into commodity_classification (pid, name, isParent, 
      create_by, create_time, remarks
      )
    values (#{pid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isparent,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.lanmei.commodity.dao.model.CommodityClassification">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commodity_classification
    set pid = #{pid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      isParent = #{isparent,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, pid, name, isParent, create_by, create_time, remarks
    from commodity_classification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, pid, name, isParent, create_by, create_time, remarks
    from commodity_classification
  </select>
  <!-- 自定义 -->
  <!-- 通过 ＰarentId 查询子节点数据-->
  <select id="selectByＰarentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, pid, name, isParent, create_by, create_time, remarks
    from commodity_classification
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <!-- 自定义 -->
  <!-- 通过 ｉd 更新 isParent-->
  <update id="updateIsParentByPrimaryKey">
    update commodity_classification
    set isParent = #{isparent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 自定义 -->
  <!-- 通过 ｉd 更改name-->
  <update id="updateRename">
    update commodity_classification
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 自定义是否是主节点 -->
  <select id="selectIsHaveChild" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(pid)
    from commodity_classification
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <!-- 通过ｉd 获取 pid -->
  <select id="selectPidById" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select pid
    from commodity_classification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--如果没有子节点，则设置 isparent-->
  <update id="updateIsParentNotParent">
    update commodity_classification
    	set isParent = #{isparent,jdbcType=VARCHAR}
    where id = #{pid,jdbcType=INTEGER}
  </update>
  
  
</mapper>